{"version":3,"sources":["screens/HomeScreen.js","App.js","reportWebVitals.js","index.js"],"names":["HomeScreen","useState","formText","setFormText","animatedText","setAnimatedText","submitted","setSubmitted","showButton","setShowButton","play","setPlay","useEffect","setTimeout","console","log","Container","Form","onSubmit","e","preventDefault","style","position","top","left","transform","duration","start","end","delay","opacity","color","visibility","Group","className","controlId","Control","autoComplete","type","placeholder","onChange","target","value","Button","width","variant","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAIaA,EAAa,WACtB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAwBR,oBAAS,GAAjC,mBAAOS,EAAP,KAAaC,EAAb,KAqBA,OAdAC,qBAAU,WACFJ,GACAK,YAAW,WAAOJ,GAAc,GAAOE,GAAQ,KAAS,MAEzDL,IACCQ,QAAQC,IAAI,kBACZV,EAAgBH,GAChBC,EAAY,IACZM,GAAc,GACdF,GAAa,GACbI,GAAQ,MAEb,CAACL,EAAWE,EAAYN,IAGvB,cAACc,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,SApBQ,SAACC,GACnBZ,GAAa,GACbY,EAAEC,kBAkBiCC,MAAO,CAACC,SAAU,QAASC,IAAK,MAAOC,KAAM,MAAOC,UAAW,yBAA9F,UACI,cAAC,UAAD,CAASC,SAAU,GAAIhB,KAAMA,EAAMiB,MAAO,CAACF,UAAW,mBAAoBG,IAAK,CAACH,UAAW,qBAA3F,SACI,cAAC,UAAD,CAASf,KAAMA,EAAMgB,SAAU,EAAGG,MAAO,GAAKF,MAAO,CAACG,QAAS,EAAGL,UAAW,YAAaG,IAAK,CAACE,QAAS,EAAGL,UAAW,aAAvH,SACI,oBAAIJ,MAAO,CACPU,MAAO,QACPC,WAAYxB,EAAa,SAAW,WAFxC,SAGQJ,QAGfI,GAAc,qCAAE,cAACS,EAAA,EAAKgB,MAAN,CAAYC,UAAU,OAAOC,UAAU,OAAvC,SACb,cAAClB,EAAA,EAAKmB,QAAN,CAAcC,aAAa,MAAMC,KAAK,OAAOC,YAAY,uBAAuBC,SAAU,SAAArB,GAAC,OAAIhB,EAAYgB,EAAEsB,OAAOC,QAAQA,MAAOxC,MAEvI,cAACyC,EAAA,EAAD,CAAQtB,MAAO,CAACuB,MAAO,QAASC,QAAQ,OAAOP,KAAK,SAApD,yC,kBC7BDQ,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.4b6f9def.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Container, Row, Col} from 'react-bootstrap'\r\nimport {Animate} from 'react-simple-animate'\r\n\r\nexport const HomeScreen = () => {\r\n    const [formText, setFormText] = useState('')\r\n    const [animatedText, setAnimatedText] = useState('')\r\n    const [submitted, setSubmitted] = useState(false)\r\n    const [showButton, setShowButton] = useState(true)\r\n    const [play, setPlay] = useState(false)\r\n\r\n    \r\n    const submitHandler = (e) => {\r\n        setSubmitted(true)\r\n        e.preventDefault()\r\n    }\r\n    useEffect(() => {\r\n        if(!showButton){\r\n            setTimeout(() => {setShowButton(true); setPlay(false)}, 2100)\r\n        }\r\n        if(submitted){\r\n            console.log('submitted loop')\r\n            setAnimatedText(formText)\r\n            setFormText('')\r\n            setShowButton(false)\r\n            setSubmitted(false)\r\n            setPlay(true)\r\n        }\r\n    }, [submitted, showButton, formText])\r\n\r\n    return (\r\n        <Container>\r\n            <Form onSubmit={submitHandler} style={{position: 'fixed', top: '60%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n                <Animate duration={.5} play={play} start={{transform: 'translateY(0px)'}} end={{transform: 'translateY(-100px'}}>\r\n                    <Animate play={play} duration={1} delay={.5}  start={{opacity: 1, transform: 'scale(2)'}} end={{opacity: 0, transform: 'scale(.1)'}}>\r\n                        <h1 style={{\r\n                            color: 'white',\r\n                            visibility: showButton ? 'hidden' : 'visible'\r\n                            }}>{animatedText}</h1>\r\n                    </Animate>\r\n                </Animate>\r\n                {showButton && <><Form.Group className=\"mb-3\" controlId=\"text\">\r\n                    <Form.Control autoComplete=\"off\" type=\"text\" placeholder=\"Enter text here. . .\" onChange={e => setFormText(e.target.value)} value={formText}/>\r\n                </Form.Group>\r\n                <Button style={{width: '100%'}} variant=\"dark\" type=\"submit\">\r\n                    Send into the void\r\n                </Button></>}\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n","import {render} from 'react-dom'\r\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\"\r\nimport {Container} from 'react-bootstrap'\r\nimport './App.css'\r\nimport {HomeScreen} from './screens/HomeScreen'\r\nimport Header from './components/Header'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <HomeScreen />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}